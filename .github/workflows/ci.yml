name: CI-Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # espera a que esté listo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Ajusta la cadena de conexión según tu engine
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      # Necesario para pytest-django
      DJANGO_SETTINGS_MODULE: mi_proyecto.settings
      # Evita que Django intente enviar emails reales
      EMAIL_BACKEND: django.core.mail.backends.locmem.EmailBackend

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django coverage

      - name: 🛠️ Ejecutar migraciones
        run: |
          python manage.py migrate --noinput

      - name: 🧪 Ejecutar tests con pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q

      - name: 📊 Subir reporte de cobertura
        if: always()
        run: |
          coverage xml
          bash <(curl -s https://codecov.io/bash) || echo "Codecov failed"
